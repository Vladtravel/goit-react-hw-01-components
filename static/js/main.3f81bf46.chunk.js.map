{"version":3,"sources":["components/Profile/Profile.module.css","components/TransactionHistory/TransactionHistory.module.css","components/FriendListItem/FriendListItem.module.css","components/Statistics/Statistics.module.css","components/Container/Container.js","components/Profile/default-foto.png","components/Profile/Profile.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/Statistics/Statistics.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","Profile","avatar","name","tag","location","stats","styles","src","alt","ProfileInfoList","ProfileName","ProfileTag","ProfileLocation","ProfileStatisticList","ProfileItem","ProfileData","ProfileStatistic","followers","views","likes","defaultProps","defaultFoto","FriendListItem","isOnline","id","Online","Offline","width","avatarName","FriendsList","friends","map","friend","Statistics","StatisticsList","item","StatisticsItem","label","percentage","TransactionHistory","transactions","Table","TableHeadRow","HeadItem","transaction","TableItem","type","amount","currency","App","dataFriends","dataStatistics","dataTransactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f81bf46.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__a7RFY\",\"ProfileName\":\"Profile_ProfileName__exrNU\",\"ProfileTag\":\"Profile_ProfileTag__22cmM\",\"ProfileLocation\":\"Profile_ProfileLocation__3pPFt\",\"ProfileItem\":\"Profile_ProfileItem__2brVW\",\"ProfileStatisticList\":\"Profile_ProfileStatisticList__16GFH\",\"ProfileData\":\"Profile_ProfileData__AiOXq\",\"ProfileStatistic\":\"Profile_ProfileStatistic__31F9q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"TransactionHistory_Table__36Ecz\",\"TableHeadRow\":\"TransactionHistory_TableHeadRow__2Gcxa\",\"HeadItem\":\"TransactionHistory_HeadItem__1XwkQ\",\"TableItem\":\"TransactionHistory_TableItem__Rzhml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FriendListItem\":\"FriendListItem_FriendListItem__1kAi3\",\"Online\":\"FriendListItem_Online__RDFyp FriendListItem_FriendListItem__1kAi3\",\"Offline\":\"FriendListItem_Offline__2Tfgg FriendListItem_FriendListItem__1kAi3\",\"avatar\":\"FriendListItem_avatar__NVyML\",\"avatarName\":\"FriendListItem_avatarName__1BB-K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatisticsList\":\"Statistics_StatisticsList__3xxg0\",\"StatisticsItem\":\"Statistics_StatisticsItem__2QzmJ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Container.css\";\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/default-foto.c0726fd2.png\";","import React from \"react\";\r\nimport defaultFoto from \"./default-foto.png\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Profile.module.css\";\r\n\r\nexport const Profile = ({ avatar, name, tag, location, stats }) => (\r\n  <>\r\n    <div className={styles.Profile}>\r\n      <img src={avatar} alt=\"Аватар пользователя\" />\r\n      <ul className={styles.ProfileInfoList}>\r\n        <li className={styles.ProfileName}>{name} </li>\r\n        <li className={styles.ProfileTag}>@{tag} </li>\r\n        <li className={styles.ProfileLocation}>{location}</li>\r\n      </ul>\r\n      <ul className={styles.ProfileStatisticList}>\r\n        <li className={styles.ProfileItem}>\r\n          <span className={styles.ProfileData}>Followers: </span>\r\n          <span className={styles.ProfileStatistic}>{stats.followers}</span>\r\n        </li>\r\n        <li className={styles.ProfileItem}>\r\n          <span className={styles.ProfileData}>Views: </span>\r\n          <span className={styles.ProfileStatistic}>{stats.views}</span>\r\n        </li>\r\n        <li className={styles.ProfileItem}>\r\n          <span className={styles.ProfileData}>Likes: </span>\r\n          <span className={styles.ProfileStatistic}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </>\r\n);\r\n\r\nProfile.defaultProps = {\r\n  avatar: defaultFoto,\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string,\r\n  alt: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline, id }) => (\r\n  <li className={styles.FriendListItem} key={id}>\r\n    <span className={isOnline ? styles.Online : styles.Offline}></span>\r\n    <img className={styles.avatar} src={avatar} alt={name} width=\"30\" />\r\n    <p className={styles.avatarName}>{name}</p>\r\n  </li>\r\n);\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FriendListItem from \"../FriendListItem/FriendListItem\";\r\n\r\nconst FriendsList = ({ friends }) => (\r\n  <ul className=\"friend-list\">\r\n    {friends.map((friend) => (\r\n      <FriendListItem\r\n        key={friend.id}\r\n        avatar={friend.avatar}\r\n        name={friend.name}\r\n        isOnline={friend.isOnline}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendsList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ stats }) => (\r\n  <section>\r\n    <h2 className=\"statistics-title\">Upload stats</h2>\r\n    <ul className={styles.StatisticsList}>\r\n      {stats.map((item) => (\r\n        <li key={item.id} className={styles.StatisticsItem}>\r\n          <span>{item.label}: </span>\r\n          <span>{item.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.Table}>\r\n    <thead>\r\n      <tr className={styles.TableHeadRow}>\r\n        <th className={styles.HeadItem}>Type</th>\r\n        <th className={styles.HeadItem}>Amount</th>\r\n        <th className={styles.HeadItem}>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {transactions.map((transaction) => (\r\n        <tr key={transaction.id}>\r\n          <td className={styles.TableItem}>{transaction.type}</td>\r\n          <td className={styles.TableItem}>{transaction.amount}</td>\r\n          <td className={styles.TableItem}>{transaction.currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Container from \"./components/Container/Container\";\r\nimport { Profile } from \"./components/Profile/Profile\";\r\nimport FriendsList from \"./components/FriendList/FriendList\";\r\nimport Statistics from \"./components/Statistics/Statistics\";\r\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\r\n\r\nimport { avatar, name, tag, location, stats } from \"./datafiles/user.json\";\r\nimport dataFriends from \"./datafiles/friends.json\";\r\nimport dataStatistics from \"./datafiles/statistical-data.json\";\r\nimport dataTransactions from \"./datafiles/transactions.json\";\r\n\r\nconst App = () => (\r\n  <Container>\r\n    <Profile\r\n      avatar={avatar}\r\n      alt={name}\r\n      name={name}\r\n      tag={tag}\r\n      location={location}\r\n      stats={stats}\r\n    />\r\n    <FriendsList friends={dataFriends} />\r\n    <Statistics stats={dataStatistics} />\r\n    <TransactionHistory transactions={dataTransactions} />\r\n  </Container>\r\n);\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}